
type User @entity {
  id: ID!
  address: String!
  balance: BigInt!
  transactionCount: Int!
}

type UserCounter @entity {
  id: ID!
  count: Int!
}

type Approval @entity {
  id: ID!
  owner: Bytes! # address
  spender: Bytes! # address
  amount: BigInt! # uint256
}

type DelegateChanged @entity {
  id: ID!
  delegator: Bytes! # address
  fromDelegate: Bytes! # address
  toDelegate: Bytes! # address
}

type DelegateVotesChanged @entity {
  id: ID!
  delegate: Bytes! # address
  previousBalance: BigInt! # uint256
  newBalance: BigInt! # uint256
}


type Transfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  amount: BigInt! # uint256
}

type Deposit @entity {
  id: ID!
  user: Bytes! # address
  pid: BigInt! # uint256
  amount: BigInt! # uint256
  to: Bytes! # address
}

type EmergencyWithdraw @entity {
  id: ID!
  user: Bytes! # address
  pid: BigInt! # uint256
  amount: BigInt! # uint256
  to: Bytes! # address
}

type ExtendPool @entity {
  id: ID!
  pid: BigInt! # uint256
  rewardBlock: BigInt! # uint256
  endOfEpochBlock: BigInt! # uint256
}

type Harvest @entity {
  id: ID!
  user: Bytes! # address
  pid: BigInt! # uint256
  amount: BigInt! # uint256
}

type LogPoolAddition @entity {
  id: ID!
  pid: BigInt! # uint256
  lpToken: Bytes! # address
}

type LogUpdatePool @entity {
  id: ID!
  pid: BigInt! # uint256
  lastRewardBlock: BigInt! # uint256
  lpSupply: BigInt! # uint256
  accRewardsPerShare: BigInt! # uint256
}

type OwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}

type RewardsAdded @entity {
  id: ID!
  amount: BigInt! # uint256
}

type Withdraw @entity {
  id: ID!
  user: Bytes! # address
  pid: BigInt! # uint256
  amount: BigInt! # uint256
  to: Bytes! # address
}

# MasterChef
type MasterChef @entity {
  id: ID!
  owner: Bytes!
  startBlock: BigInt!
  rewardsToken: Bytes!
  totalRewardsReceived: BigInt!
  pools: [Pool!]! @derivedFrom(field: "owner")
  poolCount: BigInt!
  updatedAt: BigInt!
}


type Pool @entity {
  id: ID!
  owner: MasterChef!
  tokenPerBlock : BigInt! # uint256
  lastRewardBlock: BigInt! # uint256
  lpSupply: BigInt! # uint256
  accRewardsPerShare: BigInt! # uint256
  endOfEpochBlock: BigInt! # uint256
}
